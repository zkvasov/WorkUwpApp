<local:BindablePage
    x:Class="WorkUwpApp.Views.Scenario3_CollectionsList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WorkUwpApp.Views"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:vmm="using:WorkUwpApp.ViewModels"
    xmlns:model="using:WorkUwpApp.Models"
    xmlns:custombehaviors ="using:WorkUwpApp.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters ="using:WorkUwpApp.Converters"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:xaml="using:Windows.UI.Xaml"
    mc:Ignorable="d"
    
    DataContext="{Binding Scenario3Instance, Source={StaticResource Locator}}"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">


    <Page.Resources>
        <converters:NullableValueConverter  x:Key="NullableValueConverter"/>
        <converters:NegativeBoolToVisibilityConverter  x:Key="NegativeBoolToVisibilityConverter"/>
        <converters:BoolToVisibilityConverter  x:Key="BoolToVisibilityConverter"/>
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme" />

        
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0"
                    Orientation="Horizontal">

            <RadioButton x:Uid="Settings_Theme_Light"
                         Command="{Binding SwitchThemeCommand}"
                         IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                         Content="Light"
                         FontSize="15"
                         Margin="10,0,0,0"
                         GroupName="AppTheme">
                <RadioButton.CommandParameter>
                    <xaml:ElementTheme>Light</xaml:ElementTheme>
                </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton x:Uid="Settings_Theme_Dark"
                         Command="{Binding SwitchThemeCommand}"
                         IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                         FontSize="15"
                         Content="Dark"
                         GroupName="AppTheme">
                <RadioButton.CommandParameter>
                    <xaml:ElementTheme>Dark</xaml:ElementTheme>
                </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton x:Uid="Settings_Theme_Default"
                         Command="{Binding SwitchThemeCommand}"
                         IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                         Content="Default"
                         FontSize="15"
                         GroupName="AppTheme">
                <RadioButton.CommandParameter>
                    <xaml:ElementTheme>Default</xaml:ElementTheme>
                </RadioButton.CommandParameter>
            </RadioButton>
        </StackPanel>
        

            <ListView x:Name="CollectionsList" 
                  Grid.Column="0" 
                  Grid.Row="1"
                  SelectedItem="{Binding SelectedCollection, Mode=TwoWay}"
                  ItemsSource="{Binding Collections, Mode=TwoWay}"
                  Margin="5"
                  Width="200">
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:ImagesCollection">
                    <StackPanel>
                        <TextBlock Text="{x:Bind Name}" 
                       Margin="10, 5, 0, 5"/>
                        <TextBlock Text="Playing in background"
                               Visibility = "{Binding IsLaunched, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                               HorizontalAlignment="Right"
                               Margin="0,0,10,0"
                               Foreground="Gold"/>
                    </StackPanel>

                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>




        <StackPanel Grid.Column="1" Grid.Row="1">
            <Button Content="Add new collection"
                    HorizontalAlignment="Center"
                    Margin="10"
                    Command="{Binding AddNewCollectionClicked}"/>
            <Button Content="Edit collection"
                    HorizontalAlignment="Center"
                    Margin="10"
                    IsEnabled="{Binding IsSelectedCollection, Mode=OneWay}"
                    Command="{Binding EditCollectionClicked}"/>
            <Button Content="Remove collection"
                    HorizontalAlignment="Center"
                    Margin="10"
                    IsEnabled="{Binding IsSelectedCollection, Mode=OneWay}"
                    Command="{Binding RemoveCollectionClicked}"/>
            

            <Button Content="Play collection in background"
                    IsEnabled="{Binding IsSelectedCollection, Mode=OneWay}"
                    HorizontalAlignment="Center"
                    Margin="10"
                    Command="{Binding PlayInBgClicked}"/>

            <TextBox Name="IntervalTextBox"
                     Text="{Binding SelectedInterval, Mode=TwoWay, Converter={StaticResource NullableValueConverter} }"
                     Header="Set interval (seconds):"
                     Margin="10,0,10,0"
                     extensions:TextBoxRegex.Regex="^[1-9]\d*$"
                      />

            <TextBlock Text="Interval must be positive integer!"
                       Foreground="Red"
                       Margin="0,0,10,0"
                       HorizontalAlignment="Right"
                       Visibility="{Binding Path=(extensions:TextBoxRegex.IsValid), ElementName=IntervalTextBox, Converter={StaticResource NegativeBoolToVisibilityConverter} }"/>
           
            
        </StackPanel>

    </Grid>
</local:BindablePage>
